{"version":3,"names":["React","useCallback","useMemo","StyleSheet","Svg","Path","Animated","useAnimatedStyle","mix","mixColor","Chevron","_ref","sizeIcon","progress","colorIcon","handleIcon","styleChevron","activeBackgroundIcon","inactiveBackgroundIcon","style","backgroundColor","value","transform","rotateZ","Math","PI","hasIcon","createElement","width","height","viewBox","fill","strokeWidth","strokeLinecap","strokeLinejoin","d","stroke","renderIcon","undefined","containerAnimatedStyle","styles","container","View","create","borderRadius","justifyContent","alignItems"],"sources":["chevron.tsx"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport Svg, { Path } from 'react-native-svg';\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\nimport { mix, mixColor } from 'react-native-redash';\nimport type { IChevronProps } from './types';\n\nconst Chevron = ({\n  sizeIcon,\n  progress,\n  colorIcon,\n  handleIcon,\n  styleChevron,\n  activeBackgroundIcon,\n  inactiveBackgroundIcon,\n}: IChevronProps) => {\n  const style = useAnimatedStyle(() => ({\n    // @ts-ignore\n    backgroundColor: mixColor(\n      progress.value,\n      inactiveBackgroundIcon,\n      activeBackgroundIcon\n    ),\n    transform: [{ rotateZ: `${mix(progress.value, 0, Math.PI)}rad` }],\n  }));\n\n  const hasIcon = useMemo(\n    () => (\n      <Svg\n        width={sizeIcon}\n        height={sizeIcon}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <Path d=\"M6 9l6 6 6-6\" stroke={colorIcon} />\n      </Svg>\n    ),\n    [colorIcon, sizeIcon]\n  );\n  const renderIcon = useCallback(() => {\n    if (handleIcon === null) {\n      return null;\n    }\n\n    return handleIcon !== undefined ? handleIcon(progress) : hasIcon;\n  }, [handleIcon, hasIcon, progress]);\n\n  const containerAnimatedStyle = useMemo(\n    () => [styles.container, style, styleChevron],\n    [style, styleChevron]\n  );\n\n  return (\n    <Animated.View style={containerAnimatedStyle}>{renderIcon()}</Animated.View>\n  );\n};\n\nexport default Chevron;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 30,\n    width: 30,\n    borderRadius: 30 / 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#525251',\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAOC,GAAG,IAAIC,IAAI,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,IAAIC,gBAAgB,QAAQ,yBAAyB;AACpE,SAASC,GAAG,EAAEC,QAAQ,QAAQ,qBAAqB;AAGnD,MAAMC,OAAO,GAAGC,IAAA,IAQK;EAAA,IARJ;IACfC,QAAQ;IACRC,QAAQ;IACRC,SAAS;IACTC,UAAU;IACVC,YAAY;IACZC,oBAAoB;IACpBC;EACa,CAAC,GAAAP,IAAA;EACd,MAAMQ,KAAK,GAAGZ,gBAAgB,CAAC,OAAO;IACpC;IACAa,eAAe,EAAEX,QAAQ,CACvBI,QAAQ,CAACQ,KAAK,EACdH,sBAAsB,EACtBD,oBACF,CAAC;IACDK,SAAS,EAAE,CAAC;MAAEC,OAAO,EAAG,GAAEf,GAAG,CAACK,QAAQ,CAACQ,KAAK,EAAE,CAAC,EAAEG,IAAI,CAACC,EAAE,CAAE;IAAK,CAAC;EAClE,CAAC,CAAC,CAAC;EAEH,MAAMC,OAAO,GAAGxB,OAAO,CACrB,mBACEF,KAAA,CAAA2B,aAAA,CAACvB,GAAG;IACFwB,KAAK,EAAEhB,QAAS;IAChBiB,MAAM,EAAEjB,QAAS;IACjBkB,OAAO,EAAC,WAAW;IACnBC,IAAI,EAAC,MAAM;IACXC,WAAW,EAAE,CAAE;IACfC,aAAa,EAAC,OAAO;IACrBC,cAAc,EAAC;EAAO,gBAEtBlC,KAAA,CAAA2B,aAAA,CAACtB,IAAI;IAAC8B,CAAC,EAAC,cAAc;IAACC,MAAM,EAAEtB;EAAU,CAAE,CACxC,CACN,EACD,CAACA,SAAS,EAAEF,QAAQ,CACtB,CAAC;EACD,MAAMyB,UAAU,GAAGpC,WAAW,CAAC,MAAM;IACnC,IAAIc,UAAU,KAAK,IAAI,EAAE;MACvB,OAAO,IAAI;IACb;IAEA,OAAOA,UAAU,KAAKuB,SAAS,GAAGvB,UAAU,CAACF,QAAQ,CAAC,GAAGa,OAAO;EAClE,CAAC,EAAE,CAACX,UAAU,EAAEW,OAAO,EAAEb,QAAQ,CAAC,CAAC;EAEnC,MAAM0B,sBAAsB,GAAGrC,OAAO,CACpC,MAAM,CAACsC,MAAM,CAACC,SAAS,EAAEtB,KAAK,EAAEH,YAAY,CAAC,EAC7C,CAACG,KAAK,EAAEH,YAAY,CACtB,CAAC;EAED,oBACEhB,KAAA,CAAA2B,aAAA,CAACrB,QAAQ,CAACoC,IAAI;IAACvB,KAAK,EAAEoB;EAAuB,GAAEF,UAAU,CAAC,CAAiB,CAAC;AAEhF,CAAC;AAED,eAAe3B,OAAO;AAEtB,MAAM8B,MAAM,GAAGrC,UAAU,CAACwC,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTZ,MAAM,EAAE,EAAE;IACVD,KAAK,EAAE,EAAE;IACTgB,YAAY,EAAE,EAAE,GAAG,CAAC;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpB1B,eAAe,EAAE;EACnB;AACF,CAAC,CAAC"}