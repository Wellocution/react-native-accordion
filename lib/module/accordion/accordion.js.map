{"version":3,"sources":["accordion.tsx"],"names":["React","useCallback","forwardRef","useMemo","useEffect","useState","useImperativeHandle","ActivityIndicator","TouchableWithoutFeedback","View","useWindowDimensions","Animated","useSharedValue","useAnimatedStyle","useDerivedValue","withTiming","runOnUI","runOnJS","Chevron","styles","useValidator","DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION","DEFAULT_UNMOUNTED_CONTENT_ACCORDION","DEFAULT_INACTIVE_BACKGROUND_CHEVRON","DEFAULT_EXPANDED_CONTENT_ACCORDION","DEFAULT_ACTIVE_BACKGROUND_CHEVRON","DEFAULT_DISABLED_HEAD_ACCORDION","DEFAULT_PROGRESS_LOADING_API","DEFAULT_SIZE_TINT_CHEVRON","DEFAULT_VISIBLE_CHEVRON","DEFAULT_HEIGHT_CONTENT","DEFAULT_TINT_CHEVRON","DEFAULT_CONTENT_HEIGHT","DefaultLoading","padding","indicator","props","ref","isArrow","sizeIcon","disabled","colorIcon","initExpand","handleIcon","styleChevron","contentHeight","renderContent","otherProperty","onChangeState","styleTouchable","configExpanded","styleContainer","configCollapsed","isStatusFetching","onPressSideEffect","TouchableComponent","isUnmountedContent","activeBackgroundIcon","initialMountedContent","handleCustomTouchable","onAnimatedEndExpanded","onAnimatedEndCollapsed","handleContentTouchable","inactiveBackgroundIcon","handleIndicatorFetching","needsMoreSpaceForScroll","height","open","isUnmounted","setUnmountedContent","isMounted","setMounted","addExtraSpace","setAddExtraSpace","handleHeightContent","size","openAccordion","value","created","undefined","unmount","progress","style","opacity","hasLoader","renderHeader","header","content","contentStyle","container","containerAnimatedStyle","touchableOnPress"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  forwardRef,\n  useMemo,\n  useEffect,\n  useState,\n  useImperativeHandle,\n  Ref,\n} from 'react';\nimport {\n  ActivityIndicator,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  useWindowDimensions,\n} from 'react-native';\nimport Animated, {\n  useSharedValue,\n  useAnimatedStyle,\n  useDerivedValue,\n  withTiming,\n  runOnUI,\n  runOnJS,\n} from 'react-native-reanimated';\nimport Chevron from '../chevron';\nimport type { IAccordionProps } from './types';\nimport { styles } from './styles';\nimport { useValidator } from '../hooks';\nimport {\n  DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION,\n  DEFAULT_UNMOUNTED_CONTENT_ACCORDION,\n  DEFAULT_INACTIVE_BACKGROUND_CHEVRON,\n  DEFAULT_EXPANDED_CONTENT_ACCORDION,\n  DEFAULT_ACTIVE_BACKGROUND_CHEVRON,\n  DEFAULT_DISABLED_HEAD_ACCORDION,\n  DEFAULT_PROGRESS_LOADING_API,\n  DEFAULT_SIZE_TINT_CHEVRON,\n  DEFAULT_VISIBLE_CHEVRON,\n  DEFAULT_HEIGHT_CONTENT,\n  DEFAULT_TINT_CHEVRON,\n  DEFAULT_CONTENT_HEIGHT,\n} from './constant';\n\nconst DefaultLoading = () => {\n  return (\n    <View style={{ padding: 20 }}>\n      <ActivityIndicator\n        size=\"large\"\n        color=\"#AAAAAA\"\n        style={styles.indicator}\n      />\n    </View>\n  );\n};\n\nexport default forwardRef((props: IAccordionProps, ref: Ref<any>) => {\n  useValidator(props);\n  //props configuration\n  const {\n    isArrow = DEFAULT_VISIBLE_CHEVRON,\n    sizeIcon = DEFAULT_SIZE_TINT_CHEVRON,\n    disabled = DEFAULT_DISABLED_HEAD_ACCORDION,\n    colorIcon = DEFAULT_TINT_CHEVRON,\n    initExpand = DEFAULT_EXPANDED_CONTENT_ACCORDION,\n    handleIcon,\n    styleChevron,\n    contentHeight = DEFAULT_HEIGHT_CONTENT,\n    renderContent,\n    otherProperty,\n    onChangeState,\n    styleTouchable,\n    configExpanded,\n    styleContainer,\n    configCollapsed,\n    isStatusFetching = DEFAULT_PROGRESS_LOADING_API,\n    onPressSideEffect = () => {},\n    TouchableComponent = TouchableWithoutFeedback,\n    isUnmountedContent = DEFAULT_UNMOUNTED_CONTENT_ACCORDION,\n    activeBackgroundIcon = DEFAULT_ACTIVE_BACKGROUND_CHEVRON,\n    initialMountedContent = DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION,\n    handleCustomTouchable,\n    onAnimatedEndExpanded,\n    onAnimatedEndCollapsed,\n    handleContentTouchable,\n    inactiveBackgroundIcon = DEFAULT_INACTIVE_BACKGROUND_CHEVRON,\n    handleIndicatorFetching,\n    needsMoreSpaceForScroll,\n  } = props;\n  const { height } = useWindowDimensions();\n  const open = useSharedValue(initExpand);\n  const [isUnmounted, setUnmountedContent] =\n    useState<boolean>(isUnmountedContent);\n  const [isMounted, setMounted] = useState<boolean>(initialMountedContent);\n  const [addExtraSpace, setAddExtraSpace] = useState<boolean>(false);\n  const handleHeightContent = useMemo(\n    () =>\n      renderContent === null ? 0 : contentHeight || DEFAULT_CONTENT_HEIGHT,\n    [contentHeight, renderContent]\n  );\n\n  const size = useSharedValue(handleHeightContent);\n\n  useImperativeHandle(ref, () => ({\n    openAccordion,\n  }));\n\n  useEffect(() => {\n    runOnUI(() => {\n      'worklet';\n      if (initExpand && isMounted && handleHeightContent) {\n        size.value = handleHeightContent;\n      }\n    })();\n  }, [handleHeightContent, initExpand, isMounted, size]);\n\n  useEffect(() => {\n    runOnUI(() => {\n      'worklet';\n      if (!isStatusFetching && handleHeightContent) {\n        size.value = handleHeightContent;\n      }\n    })();\n  }, [handleHeightContent, isStatusFetching, size]);\n\n  const created = useCallback(() => {\n    if (onAnimatedEndExpanded !== undefined) {\n      runOnJS(onAnimatedEndExpanded)();\n    }\n    runOnUI(setMounted)(true);\n    runOnJS(setAddExtraSpace)(false);\n  }, [onAnimatedEndExpanded]);\n\n  const unmount = useCallback(() => {\n    if (onAnimatedEndCollapsed !== undefined) {\n      runOnJS(onAnimatedEndCollapsed)();\n    }\n\n    if (isUnmountedContent) {\n      runOnJS(setUnmountedContent)(true);\n      setMounted(false);\n      return;\n    }\n  }, [isUnmountedContent, onAnimatedEndCollapsed]);\n\n  const progress = useDerivedValue(() =>\n    open.value\n      ? withTiming(1, configExpanded, runOnJS(created))\n      : withTiming(0, configCollapsed, runOnJS(unmount))\n  );\n\n  const style = useAnimatedStyle(() => ({\n    height: size.value * progress.value + 1,\n    opacity: progress.value === 0 ? 0 : 1,\n  }));\n\n  const openAccordion = useCallback(() => {\n    runOnUI(setUnmountedContent)(false);\n    runOnUI(() => {\n      'worklet';\n      size.value = handleHeightContent;\n    })();\n    open.value = !open.value;\n    onChangeState && onChangeState(!open.value);\n  }, [handleHeightContent, isMounted, onChangeState, open, size]);\n\n  const hasLoader = useMemo(\n    () =>\n      isStatusFetching ? (\n        handleIndicatorFetching ? (\n          handleIndicatorFetching()\n        ) : (\n          <ActivityIndicator\n            size=\"small\"\n            color=\"#AAAAAA\"\n            style={styles.indicator}\n          />\n        )\n      ) : (\n        <Chevron\n          sizeIcon={sizeIcon}\n          progress={progress}\n          colorIcon={colorIcon}\n          handleIcon={handleIcon}\n          styleChevron={styleChevron}\n          activeBackgroundIcon={activeBackgroundIcon}\n          inactiveBackgroundIcon={inactiveBackgroundIcon}\n        />\n      ),\n    [\n      progress,\n      sizeIcon,\n      colorIcon,\n      handleIcon,\n      styleChevron,\n      isStatusFetching,\n      activeBackgroundIcon,\n      inactiveBackgroundIcon,\n      handleIndicatorFetching,\n    ]\n  );\n\n  const renderHeader = useCallback(() => {\n    if (handleCustomTouchable === null) {\n      return null;\n    }\n\n    return handleCustomTouchable !== undefined ? (\n      handleCustomTouchable(progress)\n    ) : (\n      <Animated.View style={[styles.header, styleTouchable]}>\n        {handleContentTouchable ? handleContentTouchable(progress) : null}\n        {isArrow ? hasLoader : null}\n      </Animated.View>\n    );\n  }, [\n    isArrow,\n    hasLoader,\n    open.value,\n    styleTouchable,\n    handleCustomTouchable,\n    handleContentTouchable,\n  ]);\n\n  const content = useCallback(() => {\n    if (isUnmounted && !open.value) {\n      return null;\n    }\n\n    if (!isMounted && !isUnmounted) {\n      return <DefaultLoading />\n    }\n\n    return isMounted && renderContent ? renderContent(progress) : null;\n  }, [isMounted, isUnmounted, open.value, renderContent]);\n\n  const contentStyle = useMemo<ViewStyle[]>(\n    () => [styles.container, styleContainer],\n    [styleContainer]\n  );\n  const containerAnimatedStyle = useMemo(\n    () => [styles.content, style],\n    [style]\n  );\n\n  const touchableOnPress = React.useCallback(() => {\n    openAccordion();\n    if (!open.value && !needsMoreSpaceForScroll) {\n      onPressSideEffect();\n    } else if (!open.value && needsMoreSpaceForScroll) {\n      setAddExtraSpace(true);\n    };\n  }, [openAccordion, onPressSideEffect, open.value]);\n\n  React.useEffect(() => {\n    if (needsMoreSpaceForScroll && addExtraSpace) {\n      onPressSideEffect()\n    }\n  }, [addExtraSpace])\n\n  return (\n    <>\n      <TouchableComponent\n        onPress={touchableOnPress}\n        disabled={disabled || isStatusFetching}\n        {...otherProperty}\n      >\n        {renderHeader()}\n      </TouchableComponent>\n\n      <Animated.View style={containerAnimatedStyle}>\n        <View style={contentStyle}>{content()}</View>\n      </Animated.View>\n      {addExtraSpace ? (\n        <View style={{ height }} />\n      ) : null}\n    </>\n  );\n});\n"]}