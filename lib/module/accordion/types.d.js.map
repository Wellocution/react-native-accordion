{"version":3,"names":[],"sources":["types.d.ts"],"sourcesContent":["import { ViewStyle, ViewProps } from 'react-native';\nimport type Animated from 'react-native-reanimated';\n\nexport interface IAccordionProps {\n  /**\n   *  active/inactive TouchableWithoutFeedback\n   */\n  otherProperty?: ViewProps;\n\n  /**\n   *  active/inactive TouchableWithoutFeedback\n   */\n  disabled?: boolean;\n\n  /**\n   *  if active then the collapsible will be expanded on mounting.:\n   */\n  initExpand?: boolean;\n\n  /**\n   * Handle height helps to calculate the internal container and sheet layouts,\n   * if `renderContent` is provided, the library internally will calculate its layout,\n   * unless `contentHeight` is provided.\n   */\n  contentHeight: number;\n\n  /**\n   *  unmounted content animated end\n   */\n  isUnmountedContent?: boolean;\n\n  /**\n   *  initialMountedContent default start,\n   */\n  initialMountedContent: boolean;\n\n  /**\n   *\n   */\n  isStatusFetching: boolean;\n\n  TouchableComponent: React.FunctionComponent | React.ComponentClass;\n\n  /**\n   *\n   */\n  handleCustomTouchable?: (progress: Animated.SharedValue) => FC | null;\n\n  /**\n   *\n   */\n  handleIndicatorFetching?: () => FC | null;\n\n  /**\n   *\n   */\n  renderContent?: (progress: Animated.SharedValue) => JSX.Element | null;\n\n  /**\n   * callback change state hide/show content\n   */\n  onChangeState?: (value: boolean) => void;\n\n  /**\n   *\n   */\n  onAnimatedEndExpanded?: () => void;\n\n  /**\n   *\n   */\n  onAnimatedEndCollapsed?: () => void;\n\n  /**\n   *\n   */\n  handleContentTouchable?: (\n    progress: Animated.SharedValue\n  ) => JSX.Element | null;\n  /**\n   * component icon.\n   */\n  handleIcon?: () => FC | null;\n\n  /**\n   * Run custom fn on header press.\n   */\n  onPressSideEffect?: () => void;\n\n  /**\n   * active background arrow\n   */\n\n  activeBackgroundIcon?: string;\n\n  /**\n   * inactive background arrow\n   */\n  inactiveBackgroundIcon?: string;\n\n  /**\n   * color icon\n   */\n  colorIcon?: string;\n  /**\n   * size arrow icon\n   */\n  sizeIcon?: number;\n\n  isArrow?: boolean;\n\n  /**\n   *\n   */\n  styleChevron?: ViewStyle;\n\n  /**\n   *\n   */\n  styleTouchable?: Animated.AnimateStyle<ViewStyle>;\n\n  /**\n   *\n   */\n  styleContainer?: ViewStyle;\n  /**\n   *\n   */\n\n  configExpanded?: Animated.WithTimingConfig;\n\n  /**\n   *\n   */\n  configCollapsed?: Animated.WithTimingConfig;\n\n  needsMoreSpaceForScroll?: boolean;\n}\n"],"mappings":""}