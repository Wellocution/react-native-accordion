{"version":3,"sources":["accordion.tsx"],"names":["DefaultLoading","padding","styles","indicator","props","ref","isArrow","DEFAULT_VISIBLE_CHEVRON","sizeIcon","DEFAULT_SIZE_TINT_CHEVRON","disabled","DEFAULT_DISABLED_HEAD_ACCORDION","colorIcon","DEFAULT_TINT_CHEVRON","initExpand","DEFAULT_EXPANDED_CONTENT_ACCORDION","handleIcon","styleChevron","contentHeight","DEFAULT_HEIGHT_CONTENT","renderContent","otherProperty","onChangeState","styleTouchable","configExpanded","styleContainer","configCollapsed","isStatusFetching","DEFAULT_PROGRESS_LOADING_API","onPressSideEffect","TouchableComponent","TouchableWithoutFeedback","isUnmountedContent","DEFAULT_UNMOUNTED_CONTENT_ACCORDION","activeBackgroundIcon","DEFAULT_ACTIVE_BACKGROUND_CHEVRON","initialMountedContent","DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION","handleCustomTouchable","onAnimatedEndExpanded","onAnimatedEndCollapsed","handleContentTouchable","inactiveBackgroundIcon","DEFAULT_INACTIVE_BACKGROUND_CHEVRON","handleIndicatorFetching","needsMoreSpaceForScroll","height","open","isUnmounted","setUnmountedContent","isMounted","setMounted","addExtraSpace","setAddExtraSpace","handleHeightContent","DEFAULT_CONTENT_HEIGHT","size","openAccordion","value","created","undefined","unmount","progress","style","opacity","hasLoader","renderHeader","header","content","contentStyle","container","containerAnimatedStyle","touchableOnPress","React","useCallback","useEffect"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  forwardRef,\n  useMemo,\n  useEffect,\n  useState,\n  useImperativeHandle,\n  Ref,\n} from 'react';\nimport {\n  ActivityIndicator,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  useWindowDimensions,\n} from 'react-native';\nimport Animated, {\n  useSharedValue,\n  useAnimatedStyle,\n  useDerivedValue,\n  withTiming,\n  runOnUI,\n  runOnJS,\n} from 'react-native-reanimated';\nimport Chevron from '../chevron';\nimport type { IAccordionProps } from './types';\nimport { styles } from './styles';\nimport { useValidator } from '../hooks';\nimport {\n  DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION,\n  DEFAULT_UNMOUNTED_CONTENT_ACCORDION,\n  DEFAULT_INACTIVE_BACKGROUND_CHEVRON,\n  DEFAULT_EXPANDED_CONTENT_ACCORDION,\n  DEFAULT_ACTIVE_BACKGROUND_CHEVRON,\n  DEFAULT_DISABLED_HEAD_ACCORDION,\n  DEFAULT_PROGRESS_LOADING_API,\n  DEFAULT_SIZE_TINT_CHEVRON,\n  DEFAULT_VISIBLE_CHEVRON,\n  DEFAULT_HEIGHT_CONTENT,\n  DEFAULT_TINT_CHEVRON,\n  DEFAULT_CONTENT_HEIGHT,\n} from './constant';\n\nconst DefaultLoading = () => {\n  return (\n    <View style={{ padding: 20 }}>\n      <ActivityIndicator\n        size=\"large\"\n        color=\"#AAAAAA\"\n        style={styles.indicator}\n      />\n    </View>\n  );\n};\n\nexport default forwardRef((props: IAccordionProps, ref: Ref<any>) => {\n  useValidator(props);\n  //props configuration\n  const {\n    isArrow = DEFAULT_VISIBLE_CHEVRON,\n    sizeIcon = DEFAULT_SIZE_TINT_CHEVRON,\n    disabled = DEFAULT_DISABLED_HEAD_ACCORDION,\n    colorIcon = DEFAULT_TINT_CHEVRON,\n    initExpand = DEFAULT_EXPANDED_CONTENT_ACCORDION,\n    handleIcon,\n    styleChevron,\n    contentHeight = DEFAULT_HEIGHT_CONTENT,\n    renderContent,\n    otherProperty,\n    onChangeState,\n    styleTouchable,\n    configExpanded,\n    styleContainer,\n    configCollapsed,\n    isStatusFetching = DEFAULT_PROGRESS_LOADING_API,\n    onPressSideEffect = () => {},\n    TouchableComponent = TouchableWithoutFeedback,\n    isUnmountedContent = DEFAULT_UNMOUNTED_CONTENT_ACCORDION,\n    activeBackgroundIcon = DEFAULT_ACTIVE_BACKGROUND_CHEVRON,\n    initialMountedContent = DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION,\n    handleCustomTouchable,\n    onAnimatedEndExpanded,\n    onAnimatedEndCollapsed,\n    handleContentTouchable,\n    inactiveBackgroundIcon = DEFAULT_INACTIVE_BACKGROUND_CHEVRON,\n    handleIndicatorFetching,\n    needsMoreSpaceForScroll,\n  } = props;\n  const { height } = useWindowDimensions();\n  const open = useSharedValue(initExpand);\n  const [isUnmounted, setUnmountedContent] =\n    useState<boolean>(isUnmountedContent);\n  const [isMounted, setMounted] = useState<boolean>(initialMountedContent);\n  const [addExtraSpace, setAddExtraSpace] = useState<boolean>(false);\n  const handleHeightContent = useMemo(\n    () =>\n      renderContent === null ? 0 : contentHeight || DEFAULT_CONTENT_HEIGHT,\n    [contentHeight, renderContent]\n  );\n\n  const size = useSharedValue(handleHeightContent);\n\n  useImperativeHandle(ref, () => ({\n    openAccordion,\n  }));\n\n  useEffect(() => {\n    runOnUI(() => {\n      'worklet';\n      if (initExpand && isMounted && handleHeightContent) {\n        size.value = handleHeightContent;\n      }\n    })();\n  }, [handleHeightContent, initExpand, isMounted, size]);\n\n  useEffect(() => {\n    runOnUI(() => {\n      'worklet';\n      if (!isStatusFetching && handleHeightContent) {\n        size.value = handleHeightContent;\n      }\n    })();\n  }, [handleHeightContent, isStatusFetching, size]);\n\n  const created = useCallback(() => {\n    if (onAnimatedEndExpanded !== undefined) {\n      runOnJS(onAnimatedEndExpanded)();\n    }\n    runOnUI(setMounted)(true);\n    runOnJS(setAddExtraSpace)(false);\n  }, [onAnimatedEndExpanded]);\n\n  const unmount = useCallback(() => {\n    if (onAnimatedEndCollapsed !== undefined) {\n      runOnJS(onAnimatedEndCollapsed)();\n    }\n\n    if (isUnmountedContent) {\n      runOnJS(setUnmountedContent)(true);\n      setMounted(false);\n      return;\n    }\n  }, [isUnmountedContent, onAnimatedEndCollapsed]);\n\n  const progress = useDerivedValue(() =>\n    open.value\n      ? withTiming(1, configExpanded, runOnJS(created))\n      : withTiming(0, configCollapsed, runOnJS(unmount))\n  );\n\n  const style = useAnimatedStyle(() => ({\n    height: size.value * progress.value + 1,\n    opacity: progress.value === 0 ? 0 : 1,\n  }));\n\n  const openAccordion = useCallback(() => {\n    runOnUI(setUnmountedContent)(false);\n    runOnUI(() => {\n      'worklet';\n      size.value = handleHeightContent;\n    })();\n    open.value = !open.value;\n    onChangeState && onChangeState(!open.value);\n  }, [handleHeightContent, isMounted, onChangeState, open, size]);\n\n  const hasLoader = useMemo(\n    () =>\n      isStatusFetching ? (\n        handleIndicatorFetching ? (\n          handleIndicatorFetching()\n        ) : (\n          <ActivityIndicator\n            size=\"small\"\n            color=\"#AAAAAA\"\n            style={styles.indicator}\n          />\n        )\n      ) : (\n        <Chevron\n          sizeIcon={sizeIcon}\n          progress={progress}\n          colorIcon={colorIcon}\n          handleIcon={handleIcon}\n          styleChevron={styleChevron}\n          activeBackgroundIcon={activeBackgroundIcon}\n          inactiveBackgroundIcon={inactiveBackgroundIcon}\n        />\n      ),\n    [\n      progress,\n      sizeIcon,\n      colorIcon,\n      handleIcon,\n      styleChevron,\n      isStatusFetching,\n      activeBackgroundIcon,\n      inactiveBackgroundIcon,\n      handleIndicatorFetching,\n    ]\n  );\n\n  const renderHeader = useCallback(() => {\n    if (handleCustomTouchable === null) {\n      return null;\n    }\n\n    return handleCustomTouchable !== undefined ? (\n      handleCustomTouchable(progress)\n    ) : (\n      <Animated.View style={[styles.header, styleTouchable]}>\n        {handleContentTouchable ? handleContentTouchable(progress) : null}\n        {isArrow ? hasLoader : null}\n      </Animated.View>\n    );\n  }, [\n    isArrow,\n    hasLoader,\n    open.value,\n    styleTouchable,\n    handleCustomTouchable,\n    handleContentTouchable,\n  ]);\n\n  const content = useCallback(() => {\n    if (isUnmounted && !open.value) {\n      return null;\n    }\n\n    if (!isMounted && !isUnmounted) {\n      return <DefaultLoading />\n    }\n\n    return isMounted && renderContent ? renderContent(progress) : null;\n  }, [isMounted, isUnmounted, open.value, renderContent]);\n\n  const contentStyle = useMemo<ViewStyle[]>(\n    () => [styles.container, styleContainer],\n    [styleContainer]\n  );\n  const containerAnimatedStyle = useMemo(\n    () => [styles.content, style],\n    [style]\n  );\n\n  const touchableOnPress = React.useCallback(() => {\n    openAccordion();\n    if (!open.value && !needsMoreSpaceForScroll) {\n      onPressSideEffect();\n    } else if (!open.value && needsMoreSpaceForScroll) {\n      setAddExtraSpace(true);\n    };\n  }, [openAccordion, onPressSideEffect, open.value]);\n\n  React.useEffect(() => {\n    if (needsMoreSpaceForScroll && addExtraSpace) {\n      onPressSideEffect()\n    }\n  }, [addExtraSpace])\n\n  return (\n    <>\n      <TouchableComponent\n        onPress={touchableOnPress}\n        disabled={disabled || isStatusFetching}\n        {...otherProperty}\n      >\n        {renderHeader()}\n      </TouchableComponent>\n\n      <Animated.View style={containerAnimatedStyle}>\n        <View style={contentStyle}>{content()}</View>\n      </Animated.View>\n      {addExtraSpace ? (\n        <View style={{ height }} />\n      ) : null}\n    </>\n  );\n});\n"]}